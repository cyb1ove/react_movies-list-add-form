{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","initialMovie","NewMovie","state","imgUrlError","imdbUrlError","changeHandler","e","target","name","value","errorChecker","setState","prevState","sumbitHandler","preventDefault","onAdd","props","tempError","length","match","formatLabel","label","capitalizeFirstLetter","slice","toUpperCase","restWord","requiredFields","hasErrors","this","isAllCompleted","Object","values","every","text","onSubmit","keys","field","i","tab","fieldValue","htmlFor","classNames","type","required","onChange","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf4efd6c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable quote-props */\nimport { ChangeEvent, Component, FormEvent } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\ntype State = {\n  movie: Movie;\n  imgUrlError: boolean;\n  imdbUrlError: boolean;\n};\n\nconst initialMovie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    movie: { ...initialMovie },\n    imgUrlError: false,\n    imdbUrlError: false,\n  };\n\n  changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      this.errorChecker(name, value);\n    }\n\n    this.setState((prevState) => {\n      return {\n        movie: {\n          ...prevState.movie,\n          [name]: value,\n        } as unknown as Movie,\n      };\n    });\n  };\n\n  sumbitHandler = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const { onAdd } = this.props;\n\n    onAdd(this.state.movie);\n\n    this.setState({\n      movie: { ...initialMovie },\n    });\n  };\n\n  errorChecker = (name: keyof Movie, value: string) => {\n    const sitePattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const tempError = value.length && !value.match(sitePattern);\n\n    this.setState({\n      [`${name}Error`]: tempError,\n    } as unknown as Pick<State, keyof State>);\n  };\n\n  formatLabel = (label: string) => {\n    const capitalizeFirstLetter = label.slice(0, 1).toUpperCase();\n    const restWord = label.slice(1);\n\n    return `${capitalizeFirstLetter}${restWord}:`;\n  };\n\n  render() {\n    const requiredFields = [true, true, true, true, false];\n    const hasErrors = this.state.imgUrlError || this.state.imdbUrlError;\n    const isAllCompleted = Object.values(this.state.movie).every(text => text.length);\n    const isInvalidCheck = (tab: keyof Movie) => {\n      if (tab === 'imgUrl' || tab === 'imdbUrl') {\n        return this.state[`${tab}Error`];\n      }\n\n      return false;\n    };\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.sumbitHandler}\n      >\n        {Object.keys(this.state.movie).map((field, i) => {\n          const fieldValue = this.state.movie[field as keyof Movie];\n\n          return (\n            <label\n              className=\"form__item\"\n              htmlFor={field}\n            >\n              {this.formatLabel(field)}\n              <input\n                name={field}\n                className={classNames({\n                  'form__field': true,\n                  'form__field--invalid': isInvalidCheck(field as keyof Movie),\n                })}\n                type=\"text\"\n                value={fieldValue}\n                required={requiredFields[i]}\n                onChange={this.changeHandler}\n              />\n            </label>\n          );\n        })}\n        <button\n          className=\"form__submit\"\n          disabled={hasErrors || !isAllCompleted}\n          type=\"submit\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = movie;\n\n    this.setState((prevState) => {\n      return {\n        movies: [\n          ...prevState.movies,\n          {\n            title, description, imgUrl, imdbUrl, imdbId,\n          },\n        ],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}