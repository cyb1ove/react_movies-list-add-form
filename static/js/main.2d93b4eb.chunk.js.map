{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/FormField/FormField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","FormField","fieldProps","hasFieldError","name","htmlFor","type","NewMovie","initialMovie","initialErrors","state","errors","hasErrors","Object","values","some","value","isAllCompleted","every","text","length","changeHandler","e","target","keys","includes","checkError","setState","prevState","sumbitHandler","preventDefault","onAdd","props","tempError","match","getFieldProps","field","isFieldRequired","extraClass","class","classNames","required","placeholder","onChange","requiredFields","onSubmit","this","i","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d93b4eb.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { HtmlPropsForMovieForm } from '../../../types/types';\n\ntype Props = {\n  fieldProps: (extraClass?: (string | null)) => HtmlPropsForMovieForm;\n  hasFieldError: boolean;\n};\n\nexport const FormField: React.FC<Props> = ({ fieldProps, hasFieldError }) => {\n  const { name } = fieldProps();\n\n  return (\n    <label className=\"form__item\" htmlFor={name}>\n      <span className=\"form__title\">{name}</span>\n\n      {name === 'description' ? (\n        <textarea\n          {...fieldProps('form__field--textarea')}\n        />\n      ) : (\n        <input\n          {...fieldProps()}\n          type=\"text\"\n        />\n      )}\n\n      {hasFieldError && (\n        <span className=\"form__warning\">Incorrect URL</span>\n      )}\n    </label>\n  );\n};\n","import { Component } from 'react';\nimport classNames from 'classnames';\nimport { ChangesEvent, SubmitEvent, HtmlPropsForMovieForm } from '../../types/types';\nimport './NewMovie.scss';\nimport { FormField } from './FormField/FormField';\n\ntype MovieErrors = RequireAtLeastOne<FormFieldErrors<Movie>, 'imgUrl' | 'imdbUrl'>;\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\ntype State = {\n  movie: Movie;\n  errors: MovieErrors;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  initialMovie: Movie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  initialErrors: MovieErrors = {\n    imgUrl: false,\n    imdbUrl: false,\n  };\n\n  state: State = {\n    movie: { ...this.initialMovie },\n    errors: { ...this.initialErrors },\n  };\n\n  hasErrors = (): boolean => {\n    return Object.values(this.state.errors).some(value => value);\n  };\n\n  isAllCompleted = (): boolean => {\n    return Object.values(this.state.movie).every(text => text.length);\n  };\n\n  changeHandler = (e: ChangesEvent): void => {\n    const { name, value } = e.target;\n\n    if (Object.keys(this.state.errors).includes(name)) {\n      this.checkError(name, value);\n    }\n\n    this.setState((prevState) => {\n      return {\n        movie: {\n          ...prevState.movie,\n          [name]: value,\n        },\n      };\n    });\n  };\n\n  sumbitHandler = (e: SubmitEvent): void => {\n    e.preventDefault();\n    const { onAdd } = this.props;\n\n    onAdd(this.state.movie);\n\n    this.setState({\n      movie: { ...this.initialMovie },\n    });\n  };\n\n  checkError = (name: string, value: string) => {\n    const sitePattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const tempError: boolean = value.length ? !value.match(sitePattern) : false;\n\n    this.setState((prevState) => {\n      return {\n        errors: {\n          ...prevState.errors,\n          [name]: tempError,\n        },\n      };\n    });\n  };\n\n  getFieldProps = (\n    field: keyof Movie,\n    isFieldRequired: boolean,\n  ) => {\n    return (extraClass?: (string | null)): HtmlPropsForMovieForm => {\n      return {\n        name: field,\n        class: classNames(\n          extraClass,\n          'form__field',\n          { 'form__field--invalid': this.state.errors[field] },\n        ),\n        value: this.state.movie[field],\n        required: isFieldRequired,\n        placeholder: `Please, enter ${field}`,\n        onChange: this.changeHandler,\n      };\n    };\n  };\n\n  render() {\n    const requiredFields: boolean[] = [true, true, true, true, false];\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.sumbitHandler}\n      >\n        {\n          (Object.keys(this.state.movie) as Array<keyof Movie>).map((field, i) => {\n            const fieldProps = this.getFieldProps(field, requiredFields[i]);\n\n            return (\n              <FormField\n                fieldProps={fieldProps}\n                hasFieldError={this.state.errors[field] || false}\n              />\n            );\n          })\n        }\n\n        <button\n          className=\"form__submit\"\n          disabled={this.hasErrors() || !this.isAllCompleted()}\n          type=\"submit\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((prevState) => {\n      return {\n        movies: [\n          ...prevState.movies,\n          movie,\n        ],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}