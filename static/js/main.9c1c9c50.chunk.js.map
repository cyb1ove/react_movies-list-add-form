{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","initialMovie","initialErrors","state","errors","changeHandler","e","target","name","value","Object","keys","includes","errorChecker","setState","prevState","sumbitHandler","preventDefault","onAdd","props","tempError","length","match","formatLabel","label","capitalizeFirstLetter","slice","toUpperCase","restWord","requiredFields","hasErrors","values","this","some","isAllCompleted","every","text","onSubmit","field","i","fieldValue","htmlFor","classNames","type","required","onChange","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c1c9c50.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable quote-props */\nimport { ChangeEvent, Component, FormEvent } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\ntype State = {\n  movie: Movie;\n  errors: Errors;\n};\n\ntype Errors = {\n  title?: boolean;\n  description?: boolean;\n  imgUrl: boolean;\n  imdbUrl: boolean;\n  imdbId?: boolean;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  initialMovie: Movie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  initialErrors: Errors = {\n    imgUrl: false,\n    imdbUrl: false,\n  };\n\n  state: State = {\n    movie: { ...this.initialMovie },\n    errors: { ...this.initialErrors },\n  };\n\n  changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    if (Object.keys(this.state.errors).includes(name)) {\n      this.errorChecker(name, value);\n    }\n\n    this.setState((prevState) => {\n      return {\n        movie: {\n          ...prevState.movie,\n          [name]: value,\n        },\n      };\n    });\n  };\n\n  sumbitHandler = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const { onAdd } = this.props;\n\n    onAdd(this.state.movie);\n\n    this.setState({\n      movie: { ...this.initialMovie },\n    });\n  };\n\n  errorChecker = (name: string, value: string) => {\n    const sitePattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const tempError = value.length && !value.match(sitePattern);\n\n    this.setState((prevState) => {\n      return {\n        errors: {\n          ...prevState.errors,\n          [name]: tempError,\n        },\n      };\n    });\n  };\n\n  formatLabel = (label: string) => {\n    const capitalizeFirstLetter = label.slice(0, 1).toUpperCase();\n    const restWord = label.slice(1);\n\n    return `${capitalizeFirstLetter}${restWord}:`;\n  };\n\n  render() {\n    const requiredFields = [true, true, true, true, false];\n    const hasErrors = Object.values(this.state.errors).some(value => value);\n    const isAllCompleted = Object.values(this.state.movie).every(text => text.length);\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.sumbitHandler}\n      >\n        {(Object.keys(this.state.movie) as Array<keyof Movie>).map((field, i) => {\n          const fieldValue = this.state.movie[field];\n\n          return (\n            <label\n              className=\"form__item\"\n              htmlFor={field}\n            >\n              {this.formatLabel(field)}\n              <input\n                name={field}\n                className={classNames({\n                  'form__field': true,\n                  'form__field--invalid': this.state.errors[field],\n                })}\n                type=\"text\"\n                value={fieldValue}\n                required={requiredFields[i]}\n                onChange={this.changeHandler}\n              />\n            </label>\n          );\n        })}\n        <button\n          className=\"form__submit\"\n          disabled={hasErrors || !isAllCompleted}\n          type=\"submit\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = movie;\n\n    this.setState((prevState) => {\n      return {\n        movies: [\n          ...prevState.movies,\n          {\n            title, description, imgUrl, imdbUrl, imdbId,\n          },\n        ],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}